type Cart{
  user: User! @goField(forceResolver: true)
  product: Product! @goField(forceResolver: true)
  quantity: Int!
}

type Wishlist{
  id: ID! 
  name: String!
  user: User! @goField(forceResolver:true)
  privacy: String! 
  dateCreated: Time!

  wishlistDetails: [WishlistDetail!]! @goField(forceResolver:true)
}

input NewWishlist{
  name: String!
  privacy: String!
}

type WishlistDetail{
  wishlist: Wishlist! @goField(forceResolver:true)
  product: Product! @goField(forceResolver:true)
  quantity: Int!
  dateAdded: Time!
}



extend type Mutation{
  createCart(productID: ID!, quantity: Int!): Cart! @auth
  updateCart(productID: ID!, quantity: Int!): Cart! @auth
  deleteCart(productID: ID!): Boolean! @auth

  createWishlist(input: NewWishlist!): Wishlist! @auth
  updateWishlist(input: NewWishlist!): Wishlist! @auth
  deleteWishlist(wishlistId: ID!): Boolean! @auth

  createWishlistDetail(wishlistId: ID!, productId: ID!, quantity: Int!): WishlistDetail! @auth
  deleteWishlistDetail(wishlistId: ID!, productId: ID!, quantity: Int!): Boolean! @auth
  deleteAllWishlistWishlistDetail(wishlistId: ID!): Boolean! @auth
} 

extend type Query{
  cart(productID: ID!): Cart! @auth
  carts: [Cart!]! @auth

  wishlists: [Wishlist!]!  @goField(forceResolver:true)
  userwishlists: [Wishlist!]! @goField(forceResolver:true)
  wishlistDetails(wishlistId: ID!): [WishlistDetail!]!

  wishlist(wishlistId: ID!): Wishlist!
}

