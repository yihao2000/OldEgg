package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"
	"time"

	"github.com/yihao2000/gqlgen-todos/graph/model"
)

// CreateUserChat is the resolver for the createUserChat field.
func (r *mutationResolver) CreateUserChat(ctx context.Context, senderID string, receiverID string) (*model.UserChat, error) {
	panic(fmt.Errorf("not implemented: CreateUserChat - createUserChat"))
}

// CreateUserChatImage is the resolver for the createUserChatImage field.
func (r *mutationResolver) CreateUserChatImage(ctx context.Context, senderID string, receiverID string, image string, time time.Time) (*model.UserChatImage, error) {
	panic(fmt.Errorf("not implemented: CreateUserChatImage - createUserChatImage"))
}

// ID is the resolver for the id field.
func (r *userChatResolver) ID(ctx context.Context, obj *model.UserChat) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Seller is the resolver for the seller field.
func (r *userChatResolver) Seller(ctx context.Context, obj *model.UserChat) (*model.User, error) {
	panic(fmt.Errorf("not implemented: Seller - seller"))
}

// User is the resolver for the user field.
func (r *userChatResolver) User(ctx context.Context, obj *model.UserChat) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// UserChatMessage is the resolver for the userChatMessage field.
func (r *userChatResolver) UserChatMessage(ctx context.Context, obj *model.UserChat) ([]*model.UserChatMessage, error) {
	panic(fmt.Errorf("not implemented: UserChatMessage - userChatMessage"))
}

// UserChatImage is the resolver for the userChatImage field.
func (r *userChatResolver) UserChatImage(ctx context.Context, obj *model.UserChat) ([]*model.UserChatImage, error) {
	panic(fmt.Errorf("not implemented: UserChatImage - userChatImage"))
}

// Chat is the resolver for the chat field.
func (r *userChatImageResolver) Chat(ctx context.Context, obj *model.UserChatImage) (*model.UserChat, error) {
	panic(fmt.Errorf("not implemented: Chat - chat"))
}

// Type is the resolver for the type field.
func (r *userChatImageResolver) Type(ctx context.Context, obj *model.UserChatImage) (string, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// UserChat returns UserChatResolver implementation.
func (r *Resolver) UserChat() UserChatResolver { return &userChatResolver{r} }

// UserChatImage returns UserChatImageResolver implementation.
func (r *Resolver) UserChatImage() UserChatImageResolver { return &userChatImageResolver{r} }

type userChatResolver struct{ *Resolver }
type userChatImageResolver struct{ *Resolver }
