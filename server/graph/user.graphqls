directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

scalar Any

directive @auth on FIELD_DEFINITION

type User{
  id: ID!
  name: String!
  email: String!
  phone: String
  password: String!
  banned: Boolean!
  role: String!
  verificationcode: String
  verificationcodevalidtime: Time
  newslettersubscribe: Boolean!
  currency: Float!
  location: Location! @goField(forceResolver:true)
  userSavedSearches: [UserSavedSearch!]! @goField(forceResolver:true)
  twoFactorEnabled: Boolean!
  twoFactorCode: String!
}

type UserSavedSearch{
  id: ID!
  keyword: String!
  userID: ID!
}

type PopularSavedSearch{
  keyword: String!
  count: Int!
}

type Location{
  id: ID!
  name: String!
  longitude: Float!
  latitude: Float!
}

type Notification{
  id: ID!
  user: User! @goField(forceResolver:true)
  title: String!
  content: String!
  read: Boolean!
}



 input NewUser{
  name: String!
  email: String!
  phone: String
  password: String!
  banned: Boolean!
  role: String!
  newslettersubscribe: Boolean!
}


type CustomerServiceReview{
    id: ID!
    title: String!
    comment: String!
    rating: Float!
    user: User! @goField (forceResolver: true)
}




type AuthOps{
  login(email: String!, password: String!): Any! @goField(forceResolver: true)
  register(input: NewUser!): Any! @goField(forceResolver: true)
  
}

type Mutation {
   auth: AuthOps! @goField(forceResolver: true)
   userUpdateInformation(currentPassword: String, newPassword: String, phone: String, balance: Float, banned: Boolean): User! @goField(forceResolver: true)

   userInputVerificationCode(email:String!, verificationcode:String!, duration: Int!): User! @goField(forceResolver:true)
   validateUserVerificationCode(email: String!, verificationcode:String!): Any! @goField(forceResolver:true)

  updateUserInformation(userID: ID!, banned: Boolean): User! 
   
   userUpdateNewsLetterSubscription(userID: ID!, subscribed:Boolean!): User!

   createUserSavedSearch(keyword: String!): UserSavedSearch!
   deleteUserSavedSearch(keyword: String!): Boolean!

   createNotification(userID: ID!, title:String!, content:String!): Notification!

   createCustomerServiceReview(title:String!, comment:String!, rating:Float!): CustomerServiceReview!

   generateUserTwoFactorCode(userID: ID!, twoFactorCode:String!): Boolean!
   validateTwoFactorCode(userID: ID!, twoFactorCode:String!): Boolean!
  
}


type Query{
    user(id: ID, email: String): User! @goField(forceResolver: true)
    getCurrentUser: User! @goField(forceResolver: true) @auth
    # getUserReviews: [Review]
    getSubscribedUsers: [User!]! @auth

    protected: String! @goField(forceResolver: true) @auth
    getUserShop: Shop! @goField(forceResolver: true) @auth
    users(limit: Int, offset: Int): [User!]! @goField(forceResolver: true) @auth
    noShopUsers: [User!]! 

    locations: [Location!]!
    getUserLocation: Location!

    userSavedSearches: [UserSavedSearch!]!
    popularSavedSearches: [PopularSavedSearch!]!
    
    userProductReviews: [ProductReview!]!
    userWishlistReviews: [WishlistReview!]!

    userNotifications: [Notification!]!

    userShopReviews: [ShopReview!]!

    customerServiceReviews: [CustomerServiceReview!]!
}